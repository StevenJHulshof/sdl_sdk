#include "GameObject.h"

GameObject::GameObject():
	_selected(false),
	_hovered(false),
	_hasActionMenu(false),
	_textureType(0),
	_screenPosX(0),
	_screenPosY(0),
	_offsetX(0),
	_offsetY(0),
	_priority(0),
	_basePriority(0),
	_velocity(0),
	_xPos(0),
	_yPos(0),
	_flip(SDL_FLIP_NONE),
	_zoom(1.0)
{
	setTextureType();
}

GameObject::~GameObject()
{

}

void GameObject::update()
{
	updateInput();
	updatePhysics();
	updateGraphics();
}

void GameObject::render()
{
	renderGraphics();
}

void GameObject::updateInput()
{
	int w = gTextures[_textureType].getWidth() * _zoom;
	int h = gTextures[_textureType].getHeight() * _zoom;

	int x = 0, y = 0;
	Input::getMousePos(&x, &y);
	    if(Input::onLeftMouseClickDown() && !Input::onRightMouseClickDown())
	    {
	        if( (x > screenPosX) && (x < (screenPosX + w)) &&
	            (y > screenPosY) && (y < (screenPosY + h)))
	        {
	            if(gTextures[textureType].getPixelColor(x - screenPosX, y - screenPosY) != 0xFFFFFF00)
	            {
	                selected = true;
	            }
	            else
	            {
	                selected = false;
	            }
	        }
	        else
	        {
	            selected = false;
	        }
	    }

	    if( (x > screenPosX) && (x < (screenPosX + w)) &&
	            (y > screenPosY) && (y < (screenPosY + h)))
	    {
	        if(gTextures[textureType].getPixelColor(x - screenPosX, y - screenPosY) != 0xFFFFFF00)
	        {
	            hovered = true;
	        }
	        else
	        {
	            hovered = false;
	        }
	    }
	    else
	    {
	        hovered = false;
	    }

	    int yPos;
	    this->getGameObject()->template send<int, int>(MSG_GET_PHYSICS, MSG_DATA_PHYSICS_Y_POS, &yPos);
	    priority = basePriority + yPos;
}

void GameObject::updatePhysics()
{

}

void GameObject::updateGraphics()
{
	int w = gTextures[TEXTURE_TEMPLATE].getWidth() * _zoom;
	int h = gTextures[TEXTURE_TEMPLATE].getHeight() * _zoom;

	Translate::gridToScreenPos(_xPos, _yPos, w, h, &_screenPosX, &_screenPosY);
}

void GameObject::renderGraphics()
{
	gTextures[_textureType].render(_screenPosX + _offsetX, _screenPosY + _offsetY, NULL, 0, NULL, _flip, _zoom);
}

void GameObject::setTextureType()
{

}
