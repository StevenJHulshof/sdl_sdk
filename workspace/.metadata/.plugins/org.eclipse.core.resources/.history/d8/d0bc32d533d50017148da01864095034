#include "Camera.h"

Camera::Camera(int screenPosX, int screenPosY):
	GameObject(),
	dragFlag(false),
	dragStartX(0),
	dragStartY(0)
{
	_screenPosX = screenPosX;
	_screenPosY = screenPosY;
	_velocity = CAMERA_VELOCITY;
}

Camera::~Camera()
{

}

void Camera::updateInput()
{
	int w = gTextures[TEXTURE_TEMPLATE].getWidth() * _zoom;
	int h = gTextures[TEXTURE_TEMPLATE].getHeight() * _zoom;

	int dragX = 0, dragY = 0;
	Input::getMousePos(&dragX, &dragY);

	if(Input::onRightMouseClickDown() && !Input::onLeftMouseClickDown())
	{
		if(!dragFlag)
		{
			dragStartX = x - dragX;
			dragStartY = y - dragY;
			dragFlag = true;
		}
		if(dragStartY + dragY < -96 && dragStartY + dragY - SCREEN_HEIGHT + 64 > (int) -GRID_Y * (h / 4))
		{
			_offsetY = dragStartY + dragY;
		}
		else
		{
			dragStartY = y - dragY;
		}
		if(dragStartX + dragX < -16 && dragStartX + dragX - SCREEN_WIDTH - 16 > (int) -GRID_X * w * 0.75)
		{
			this->getGameObject()->template send<int, int>(MSG_SET_GRAPHICS_OFFSET_X, dragStartX + dragX);
		}
		else
		{
			dragStartX = x - dragX;
		}
	}
	else
	{
		dragFlag = false;

		if(Input::onKeyPressed(VK_UP))
		{
			if(y < -96)
			{
				this->getGameObject()->template send<int, int>(MSG_SET_GRAPHICS_OFFSET_Y, y + velocity);
			}
		}
		if(Input::onKeyPressed(VK_DOWN))
		{
			if(y - SCREEN_HEIGHT + 64 > (int) -GRID_Y * (h / 4))
			{
				this->getGameObject()->template send<int, int>(MSG_SET_GRAPHICS_OFFSET_Y, y - velocity);
			}
		}
		if(Input::onKeyPressed(VK_LEFT))
		{
			if(x < -16)
			{
				this->getGameObject()->template send<int, int>(MSG_SET_GRAPHICS_OFFSET_X, x + velocity);
			}
		}
		if(Input::onKeyPressed(VK_RIGHT))
		{
			if(x - SCREEN_WIDTH - 16 > (int) -GRID_X * w * 0.75)
			{
				this->getGameObject()->template send<int, int>(MSG_SET_GRAPHICS_OFFSET_X, x - velocity);
			}
		}
	}
}
