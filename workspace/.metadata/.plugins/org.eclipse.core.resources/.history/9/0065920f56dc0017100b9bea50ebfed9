/*
 * Grid.cpp
 *
 *  Created on: Nov 29, 2017
 *      Author: Steven
 */

#include "Grid.h"

std::vector<TileData> Grid::_tileGrid;

Grid::Grid()
{
	for(int x = -GRID_N; x <= GRID_N; x++)
	{
		for(int y = std::max(-GRID_N, -x - GRID_N); y <= std::min(GRID_N, -x + GRID_N); y++)
		{
			int z = -x - y;
			_tileGrid.push_back(TileData(x, y, z));
		}
	}
}

Grid::~Grid()
{

}

void Grid::setTileData(std::vector<TileData> &grid, int xPos, int yPos, int zPos, Tile *tile)
{
	for(size_t i = 0; i < _tileGrid.size(); i++)
	{
		if(	grid[i]._xPos == xPos &&
			grid[i]._yPos == yPos &&
			grid[i]._zPos == zPos)
		{
			grid[i]._tile = tile;
		}
	}
}

void Grid::render(std::vector<TileData> &grid)
{
	for(size_t i = 0; i < grid.size(); i++)
	{
		grid[i].tile->render();
	}
}
