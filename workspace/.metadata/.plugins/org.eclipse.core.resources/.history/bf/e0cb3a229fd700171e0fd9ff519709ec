#include "GameObject.h"

GameObject::GameObject():
	_selected(false),
	_hovered(false),
	_isActive(true),
	_textureType(0),
	_screenPosX(0),
	_screenPosY(0),
	_offsetX(0),
	_offsetY(0),
	_priority(0),
	_basePriority(0),
	_velocity(0),
	_xPos(0),
	_yPos(0),
	_flip(SDL_FLIP_NONE),
	_zoom(1.0)
{
	setTextureType();
}

GameObject::~GameObject()
{

}

void GameObject::update()
{
	if(_isActive)
	{
		updateInput();
		updatePhysics();
		updateGraphics();
	}
	else
	{
		_hovered = false;
		_selected = false;
	}

}

void GameObject::render()
{
	if(_isActive)
	{
		renderInput();
		renderPhysics();
		renderGraphics();
	}
}

void GameObject::updateInput()
{
	int w = (int) gTextures[_textureType].getWidth() * _zoom;
	int h = (int) gTextures[_textureType].getHeight() * _zoom;

	int x = 0, y = 0;
	Input::getMousePos(&x, &y);

	if(Input::onLeftMouseClickDown() && !Input::onRightMouseClickDown())
	{
		if( (x > (_screenPosX + _offsetX)) && (x < (_screenPosX + _offsetX + w)) &&
			(y > (_screenPosY + _offsetY)) && (y < (_screenPosY + _offsetY + h)))
		{
			if(gTextures[_textureType].getPixelColor(x - (_screenPosX + _offsetX), y - (_screenPosY + _offsetY)) != 0xFFFFFF00)
			{
				_selected = true;
			}
			else
			{
				_selected = false;
			}
		}
		else
		{
			_selected = false;
		}
	}
	if( (x > (_screenPosX + _offsetX)) && (x < (_screenPosX + _offsetX + w)) &&
		(y > (_screenPosY + _offsetY)) && (y < (_screenPosY + _offsetY + h)))
	{
		if(gTextures[_textureType].getPixelColor(x - (_screenPosX + _offsetX), y - (_screenPosY + _offsetY)) != 0xFFFFFF00)
		{
			_hovered = true;
		}
		else
		{
			_hovered = false;
		}
	}
	else
	{
		_hovered = false;
	}
}

void GameObject::updatePhysics()
{
	_priority = _basePriority + _yPos;
}

void GameObject::updateGraphics()
{
	int w = gTextures[_textureType].getWidth() * _zoom;
	int h = gTextures[_textureType].getHeight() * _zoom;

	Translate::gridToScreenPos(_xPos, _yPos, w, h, &_screenPosX, &_screenPosY);
}

void GameObject::renderInput()
{

}

void GameObject::renderPhysics()
{

}

void GameObject::renderGraphics()
{
	gTextures[_textureType].render(_screenPosX + _offsetX, _screenPosY + _offsetY, NULL, 0, NULL, _flip, _zoom);
}

void GameObject::deleteSelf()
{
	delete this;
}

void GameObject::setTextureType()
{

}
