#include "StatMenu.h"

StatMenu::StatMenu(int xPos, int yPos):
	Menu(xPos, yPos, TYPE_OBJECT_MENU_STAT),
	_statTextures(0)
{

}

StatMenu::~StatMenu()
{

}

void StatMenu::updateGraphics()
{
	Menu::updateGraphics();

	_screenPosX -= 32;
	_screenPosY += 128;
}

void StatMenu::renderGraphics()
{
	Menu::renderGraphics();

//	int symbolScreenPosX = _screenPosX + _offsetX - 10;
//	int symbolScreenPosY = _screenPosY + _offsetY - 90;
	int statMiddleScreenPosX = _screenPosX + _offsetX;
	int statMiddleScreenPosY = _screenPosY + _offsetY + 6;
//	for(size_t i = 0; i < _statTextures.size(); i++)
//	{
//		if(i % 3 == 0 && i != 0)
//		{
//			symbolScreenPosX = -10;
//			symbolScreenPosY += 12;
//		}
//		gTextures[_statTextures[i]].render(symbolScreenPosX, symbolScreenPosY, NULL, 0, NULL, SDL_FLIP_NONE, 1.0);
//		Texture::openFont("Courier Prime", 10);
//        SDL_Color textColor = { 0, 0, 0 };
//        gTextTexture.loadFromRenderedText(std::to_string(*_statValue[i]), textColor);
//        gTextTexture.render(_screenPosX + symbolScreenPosX + 10, _screenPosY + symbolScreenPosY, NULL, 0, NULL, SDL_FLIP_NONE, 1.0);
//		symbolScreenPosX += 40;
//	}

	gTextures[TEXTURE_OBJECT_MENU_STAT_BOTTOM].render(statMiddleScreenPosX, statMiddleScreenPosY, NULL, 0, NULL, SDL_FLIP_NONE, 1.0);
}

void StatMenu::addStat(int type, int *stat)
{
	switch(type)
	{
	case STAT_TYPE_HEALTH:
		_statTextures.push_back(TEXTURE_STAT_HEALTH);
		break;
	case STAT_TYPE_ATTACK_MELEE:
		_statTextures.push_back(TEXTURE_STAT_ATTACK_MELEE);
		break;
	default:
		std::cout << "Statistic type invalid" << std::endl;
		break;
	}
	_statValue.push_back(stat);
}

std::vector<StatMenu*> gStatMenuPool;
