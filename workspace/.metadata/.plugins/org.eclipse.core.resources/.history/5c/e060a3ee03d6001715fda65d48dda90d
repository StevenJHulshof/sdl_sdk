/*
 * Container.cpp
 *
 *  Created on: Nov 29, 2017
 *      Author: Steven
 */

#include "Container.h"

Container::Container():
	grassTile(TYPE_TILE_GRASS),
	sandTile(TYPE_TILE_SAND),
	waterTile(TYPE_TILE_WATER),
	generator(),
	camera(CAMERA_OFFSET_X_START, CAMERA_OFFSET_Y_START),
	cursor()
{
	createWorld();
}

Container::~Container()
{

}

void Container::update()
{
	camera.update();
	grassTile._offsetX = camera._offsetX;
	grassTile._offsetY = camera._offsetY;
	sandTile._offsetX = camera._offsetX;
	sandTile._offsetY = camera._offsetY;
	waterTile._offsetX = camera._offsetX;
	waterTile._offsetY = camera._offsetY;

	gGlobalObjectPool.update(camera._offsetX, camera._offsetY);

	cursor.update();
}

void Container::render()
{
	gTextures[TEXTURE_BACKGROUND].render(0, 0, NULL, 0, NULL, SDL_FLIP_NONE, 1.0);

	for(int y = 0; y < GRID_Y; y++)
	{
		for(int x = 0; x < GRID_X; x++)
		{
			switch(Grid::_tileGrid[x][y])
			{
			case TYPE_TILE_GRASS:
				grassTile.render(x, y);
				break;
			case TYPE_TILE_SAND:
				sandTile.render(x, y);
				break;
			case TYPE_TILE_WATER:
				waterTile.render(x, y);
				break;
			default:
				break;
			}
		}
	}

	gGlobalObjectPool.render();

	cursor.render();
}

void Container::createWorld()
{
	generator.fillGrid(Grid::_tileGrid, TYPE_TILE_GRASS);
	generator.generatePatch(Grid::_tileGrid, TYPE_TILE_SAND, 40, 20);
	generator.generatePatch(Grid::_tileGrid, TYPE_TILE_WATER, 80, 50);
	generator.generateBorder(Grid::_tileGrid, TYPE_TILE_WATER);

	generator.fillGrid(Grid::_playableGrid, TYPE_EMPTY);
	generator.generatePatch(Grid::_playableGrid, TYPE_RESOURCE_RAW_WOOD, 10, 50, Grid::_tileGrid, TYPE_TILE_GRASS);
	generator.generatePatch(Grid::_playableGrid, TYPE_RESOURCE_RAW_STONE, 5, 10, Grid::_tileGrid, TYPE_TILE_GRASS);

	for(int y = 0; y < GRID_Y; y++)
	{
		for(int x = 0; x < GRID_X; x++)
		{
			if(Grid::_playableGrid[x][y] == TYPE_RESOURCE_RAW_STONE)
			{
				createRawStone(x, y);
			}
			else if(Grid::_playableGrid[x][y] == TYPE_RESOURCE_RAW_WOOD)
			{
				createRawWood(x, y);
			}
		}
	}
	for(int i = 0; i < 100; i++)
	{
		int xRand = rand() % (GRID_X - 1) + 1;
		int yRand = rand() % (GRID_Y - 1) + 1;
		if(Grid::_tileGrid[xRand][yRand] != TYPE_TILE_WATER && Grid::_playableGrid[xRand][yRand] == TYPE_EMPTY)
		{
			createWarrior(xRand, yRand);
		}
	}
}
