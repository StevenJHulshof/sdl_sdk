#include "GlobalObjectPool.h"

GlobalObjectPool::GlobalObjectPool():
	_maxPriority(0)
{
	resetObjectBuffers();
}

GlobalObjectPool::~GlobalObjectPool()
{

}

void GlobalObjectPool::update(int offsetX, int offsetY)
{
	_maxPriority = 0;
	resetObjectBuffers();

	updatePool(_resourcePool, offsetX, offsetY, _resourceBuffer);
	updatePool(_rawStonePool, offsetX, offsetY, _rawStoneBuffer);
	updatePool(_rawWoodPool, offsetX, offsetY, _rawWoodBuffer);
	updatePool(_unitPool, offsetX, offsetY, _unitBuffer);
	updatePool(_warriorPool, offsetX, offsetY, _warriorBuffer);
}

void GlobalObjectPool::render()
{
	int resourceIndex = _resourcePool.size() - 1;
	int rawStoneIndex = _rawStonePool.size() - 1;
	int rawWoodIndex = _rawWoodPool.size() - 1;
	int unitIndex = _unitPool.size() - 1;
	int warriorIndex = _warriorPool.size() - 1;

	for(int y = 0; y < GRID_Y; y++)
	{
		renderPool(_resourcePool, y, &resourceIndex);
		renderPool(_rawStonePool, y, &rawStoneIndex);
		renderPool(_rawWoodPool, y, &rawWoodIndex);
		renderPool(_unitPool, y, &unitIndex);
		renderPool(_warriorPool, y, &warriorIndex);
	}
}

void GlobalObjectPool::deleteAllPools()
{
	deletePool(_resourcePool);
	deletePool(_rawStonePool);
	deletePool(_rawWoodPool);
	deletePool(_unitPool);
	deletePool(_warriorPool);
}

void GlobalObjectPool::resetObjectBuffers()
{
	for(int i = 0; i < OBJECT_MEMBER_TOTAL; i++)
	{
		_resourceBuffer[i] = NULL;
		_rawStoneBuffer[i] = NULL;
		_rawWoodBuffer[i] = NULL;
		_unitBuffer[i] = NULL;
		_warriorBuffer[i] = NULL;
	}
}

void GlobalObjectPool::setObjectBuffersMember(int memberType, bool value)
{
	switch(memberType)
	{
	case OBJECT_MEMBER_SELECTED:
		setObjectMember(_resourceBuffer[OBJECT_MEMBER_SELECTED], &_resourceBuffer[OBJECT_MEMBER_SELECTED]->_selected, value);
		setObjectMember(_rawStoneBuffer[OBJECT_MEMBER_SELECTED], &_rawStoneBuffer[OBJECT_MEMBER_SELECTED]->_selected, value);
		setObjectMember(_rawWoodBuffer[OBJECT_MEMBER_SELECTED], &_rawWoodBuffer[OBJECT_MEMBER_SELECTED]->_selected, value);
		setObjectMember(_unitBuffer[OBJECT_MEMBER_SELECTED], &_unitBuffer[OBJECT_MEMBER_SELECTED]->_selected, value);
		setObjectMember(_warriorBuffer[OBJECT_MEMBER_SELECTED], &_warriorBuffer[OBJECT_MEMBER_SELECTED]->_selected, value);
		break;
	case OBJECT_MEMBER_HOVERED:
		setObjectMember(_resourceBuffer[OBJECT_MEMBER_HOVERED], &_resourceBuffer[OBJECT_MEMBER_HOVERED]->_hovered, value);
		setObjectMember(_rawStoneBuffer[OBJECT_MEMBER_HOVERED], &_rawStoneBuffer[OBJECT_MEMBER_HOVERED]->_hovered, value);
		setObjectMember(_rawWoodBuffer[OBJECT_MEMBER_HOVERED], &_rawWoodBuffer[OBJECT_MEMBER_HOVERED]->_hovered, value);
		setObjectMember(_unitBuffer[OBJECT_MEMBER_HOVERED], &_unitBuffer[OBJECT_MEMBER_HOVERED]->_hovered, value);
		setObjectMember(_warriorBuffer[OBJECT_MEMBER_HOVERED], &_warriorBuffer[OBJECT_MEMBER_HOVERED]->_hovered, value);
		break;
	default:
		break;
	}
}

GlobalObjectPool gGlobalObjectPool;
