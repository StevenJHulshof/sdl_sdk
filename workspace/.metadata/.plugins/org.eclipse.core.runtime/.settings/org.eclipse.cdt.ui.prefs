content_assist_disabled_computers=org.eclipse.cdt.ui.textProposalCategory\u0000org.eclipse.cdt.ui.parserProposalCategory\u0000
eclipse.preferences.version=1
org.eclipse.cdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="org.eclipse.core.runtime.text.contenttype_context" deleted\="false" description\="" enabled\="true" name\="game_object_h">\#pragma once\r\n\r\n\#include "container_types.h"\r\n\#include "GameObject.h"\r\n\r\nclass ${file_base}\: public GameObject\r\n{\r\nprotected\:\r\n\tvirtual void setTextureType();\r\n\r\npublic\:\r\n\t${file_base}(int xPos, int yPos, int type);\r\n\tvirtual ~${file_base}();\r\n};\r\n</template><template autoinsert\="false" context\="org.eclipse.core.runtime.text.contenttype_context" deleted\="false" description\="" enabled\="true" name\="game_object_cpp">\#include "${file_base}.h"\r\n\r\n${file_base}\:\:${file_base}(int xPos, int yPos, int type)\:\r\n\tGameObject()\r\n{\r\n\t_xPos \= xPos;\r\n\t_yPos \= yPos;\r\n\t_type \= type;\r\n\tsetTextureType();\r\n\t_priority \= _basePriority \= /*priority enum*/0;\r\n}\r\n\r\n${file_base}\:\:~${file_base}()\r\n{\r\n\r\n}\r\n\r\nvoid ${file_base}\:\:setTextureType()\r\n{\r\n\tswitch(_type)\r\n\t{\r\n\tdefault\:\r\n\t\tbreak;\r\n\t}\r\n}\r\n</template><template autoinsert\="false" context\="org.eclipse.core.runtime.text.contenttype_context" deleted\="false" description\="" enabled\="true" name\="resource_cpp">\#include "${file_base}.h"\r\n\r\n${file_base}\:\:${file_base}(int xPos, int yPos, int type)\:\r\n\tResource(xPos, yPos, type)\r\n{\r\n\r\n}\r\n\r\n${file_base}\:\:~${file_base}()\r\n{\r\n\r\n}</template><template autoinsert\="false" context\="org.eclipse.core.runtime.text.contenttype_context" deleted\="false" description\="" enabled\="true" name\="resource_h">\#pragma once\r\n\r\n\#include "Resource.h"\r\n\r\nclass ${file_base}\: public Resource\r\n{\r\npublic\:\r\n\t${file_base}(int xPos, int yPos, int type);\r\n\tvirtual ~${file_base}();\r\n};\r\n</template><template autoinsert\="false" context\="org.eclipse.core.runtime.text.contenttype_context" deleted\="false" description\="" enabled\="true" name\="resource_raw_cpp">\#include "${file_base}.h"\r\n\r\n${file_base}\:\:${file_base}(int xPos, int yPos)\:\r\n\tRawResource(xPos, yPos, /*type enum*/0)\r\n{\r\n\r\n}\r\n\r\n${file_base}\:\:~${file_base}()\r\n{\r\n\r\n}\r\n\r\n\r\nvoid ${file_base}\:\:renderGraphics()\r\n{\r\n\tRawResource\:\:renderGraphics();\r\n\r\n\tif(_hovered)\r\n\t{\r\n\t\tgTextures[/*texture enum*/0].render(_screenPosX + _offsetX, _screenPosY + _offsetY, NULL, 0, NULL, _flip, _zoom);\r\n\t}\r\n}\r\n</template><template autoinsert\="false" context\="org.eclipse.core.runtime.text.contenttype_context" deleted\="false" description\="" enabled\="true" name\="resource_raw_h">\#pragma once\r\n\r\n\#include "RawResource.h"\r\n\r\nclass ${file_base}\: public RawResource\r\n{\r\npublic\:\r\n\t${file_base}(int xPos, int yPos);\r\n\tvirtual ~${file_base}();\r\n\r\n\tvirtual void renderGraphics();\r\n};\r\n</template><template autoinsert\="false" context\="org.eclipse.core.runtime.text.contenttype_context" deleted\="false" description\="" enabled\="true" name\="menu_cpp">\#include "${file_base}.h"\r\n\r\n${file_base}\:\:${file_base}(int xPos, int yPos)\:\r\n\tMenu(xPos, yPos, /*type enum*/0)\r\n{\r\n\r\n}\r\n\r\n${file_base}\:\:~${file_base}()\r\n{\r\n\r\n}</template><template autoinsert\="false" context\="org.eclipse.core.runtime.text.contenttype_context" deleted\="false" description\="" enabled\="true" name\="menu_h">\#pragma once\r\n\r\n\#include "Menu.h"\r\n\r\nclass ${file_base}\: public Menu\r\n{\r\npublic\:\r\n\t${file_base}(int xPos, int yPos);\r\n\tvirtual ~${file_base}();\r\n};\r\n</template><template autoinsert\="false" context\="org.eclipse.core.runtime.text.contenttype_context" deleted\="false" description\="" enabled\="true" name\="unit_cpp">\#include "${file_base}.h"\r\n\r\n${file_base}\:\:${file_base}(int xPos, int yPos, int type)\:\r\n\tUnit(xPos, yPos, type)\r\n{\r\n\r\n}\r\n\r\n${file_base}\:\:~${file_base}()\r\n{\r\n\r\n}\r\n\r\nstd\:\:vector&lt;${file_base}*&gt; g${file_base}Pool;</template><template autoinsert\="false" context\="org.eclipse.core.runtime.text.contenttype_context" deleted\="false" description\="" enabled\="true" name\="unit.h">\#pragma once\r\n\r\n\#include "Unit.h"\r\n\r\nclass ${file_base}\: public Unit\r\n{\r\npublic\:\r\n\t${file_base}(int xPos, int yPos, int type);\r\n\tvirtual ~${file_base}();\r\n};\r\n\r\nextern std\:\:vector&lt;${file_base}*&gt; g${file_base}Pool;\r\n</template></templates>
spelling_locale_initialized=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
